{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","CreateTodoButton/index.js","Modal/index.js","TodoForm/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","console","log","saveItem","newITem","stringFielItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","indexTodo","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.82f69375.chunk.js","sourcesContent":["import React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n\n    const {\n        item: todos,\n        saveItem: saveTodos,\n        loading,\n        error\n    } = useLocalStorage('TODOS_V1', []);\n\n    const [searchValue, setSearchValue] = React.useState('');\n    const [openModal, setOpenModal] = React.useState(false);\n    const completedTodos = todos.filter(todo => !!todo.completed).length;\n    const totalTodos = todos.length;\n\n    let searchedTodos = [];\n\n    if (!searchValue.length >=1) {\n        searchedTodos = todos;\n    } else {\n        searchedTodos = todos.filter(todo => {\n            const todoText = todo.text.toLowerCase();\n            const searchText = searchValue.toLowerCase();\n            return todoText.includes(searchText);\n        });\n    }\n\n    const completeTodo = (text) => {\n        const indexTodo = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos[indexTodo].completed = true;\n        saveTodos(newTodos);\n    };\n\n    const deleteTodo = (text) => {\n        const indexTodo = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(indexTodo, 1);\n        saveTodos(newTodos);\n    }\n\n    const addTodo = (text) => {\n        const newTodos = [...todos];\n        newTodos.push({\n            completed: false,\n            text,\n          });\n        saveTodos(newTodos);\n    };\n\n    return (\n        <TodoContext.Provider value={{\n            loading,\n            error,\n            totalTodos,\n            completedTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            addTodo,\n            completeTodo,\n            deleteTodo,\n            openModal,\n            setOpenModal\n          }}>\n            {props.children}\n        </TodoContext.Provider>\n    );\n}\n\nexport {TodoContext, TodoProvider};","import React from \"react\";\n\nfunction useLocalStorage(itemName, initValue) {\n    const [error, setError] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [item, setItem] = React.useState(initValue);\n  \n    React.useEffect(() => {\n      setTimeout(()=> {\n        try {\n          const localStorageItem = localStorage.getItem(itemName);\n          let parsedItem;\n          if (!localStorageItem) {\n            localStorage.setItem(itemName, JSON.stringify(initValue));\n            parsedItem = initValue;\n          } else {\n            parsedItem = JSON.parse(localStorageItem);\n          }\n          setItem(parsedItem);\n          setLoading(false);\n        } catch(error) {\n          console.log('use effect error', error);\n          setError(error);\n        }\n      }, 3000);\n    });\n  \n    const saveItem = (newITem) => {\n        try{\n          const stringFielItem = JSON.stringify(newITem);\n          localStorage.setItem(itemName, stringFielItem);\n          setItem(newITem);\n        } catch (error) {\n          console.log(error);\n          setError(error);\n        }\n    };\n  \n    return {\n      item,\n      saveItem,\n      loading,\n      error\n    }\n  }\n\n  export {useLocalStorage};","import React from \"react\";\nimport {TodoContext} from '../TodoContext';\nimport './TodoCounter.css'\n\n\n/*const estilos = {\n    color: 'red',\n    backgrounColor: 'yellow'\n};*/\n\nfunction TodoCounter() {\n\n    const {totalTodos, completedTodos } = React.useContext(TodoContext);\n\n    return (\n        {/*<h2 style={estilos}>Has Completado 2 de 3 TODOs</h2>*/},\n        <h2 className=\"TodoCounter\">Has Completado {completedTodos} de {totalTodos} TODOs</h2>\n    );\n}\n\n\nexport {TodoCounter}; // de esta manera se obliga que la importacion sea del mismo nombre => import {TodoCounter} from './TodoCounter\n//export default TodoCounter;  => esta opcion no es tan recomendable ya que la exportacion por defecto se permite importar con cualquier nombre. => import patito from './TodoCounter'","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\n\nfunction TodoSearch() {\n\n    const { searchValue, setSearchValue } = React.useContext(TodoContext);\n\n    const onSearchValueChange = (event) => {\n        console.log(event.target.value);\n        setSearchValue(event.target.value);\n    }\n\n    return (\n        <input \n            className=\"TodoSearch\" \n            placeholder=\"...\"\n            value={searchValue}\n            onChange={onSearchValueChange} \n        />\n    );\n}\n\nexport {TodoSearch};","import './TodoList.css';\n\nfunction TodoList(props) {\n    return(\n        <section>\n            <ul>\n                {props.children}\n            </ul>\n        </section>\n    );\n}\n\nexport {TodoList};","import './TodoItem.css';\n\nfunction TodoItem(props) {\n\n    return (\n        <li className=\"TodoItem\">\n        <span\n          className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n          onClick={props.onComplete}\n        >\n          âˆš\n        </span>\n        <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n          {props.text}\n        </p>\n        <span\n          className=\"Icon Icon-delete\"\n          onClick={props.onDelete}\n        >\n          X\n        </span>\n      </li>\n    );\n}\n\nexport {TodoItem};","import './CreateTodoButton.css'\n\n\nfunction CreateTodoButton(props) {\n    \n    const onClickButton = () => {\n        //props.setOpenModal(!props.openModal);\n        props.setOpenModal(prevState => !prevState);\n    }\n\n    return (\n        <button \n            className=\"CreateTodoButton\" \n            /*onClick={() => console.log('clic')}*/\n            /*onClick={onClickButton}*/\n            onClick={onClickButton}>\n            +\n        </button>\n    );\n}\n\nexport {CreateTodoButton};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './Modal.css';\n\nfunction Modal({children}) {\n\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.getElementById('modal')\n    );\n}\n\nexport {Modal};","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport './TodoForm.css';\n\nfunction TodoForm() {\n\n    const [newTodoValue, setNewTodoValue] = React.useState('');\n\n    const { addTodo, setOpenModal } = React.useContext(TodoContext);\n\n\n    const onChange = (event) => {\n        setNewTodoValue(event.target.value);\n    }\n\n    const onCancel = () => {\n        setOpenModal(false);\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        addTodo(newTodoValue);\n        setOpenModal(false);\n    };\n\n    return (\n        <form onSubmit={onSubmit}> \n            <label>Escribe tu nuevo TODO</label>\n            <textarea \n                value={newTodoValue}\n                onChange={onChange}\n                placeholder=\"Cortar la cebolla para el almuerzo\"/>\n            <div className=\"TodoForm-buttonContainer\">\n                <button \n                    type=\"button\"\n                    className=\"TodoForm-button TodoForm-button--cancel\"\n                    onClick={onCancel}>\n                        Cancelar\n                </button>\n                <button type=\"submit\" className=\"TodoForm-button TodoForm-button--add\">\n                    AÃ±adir\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport {TodoForm};","import React from \"react\";\nimport {TodoContext} from '../TodoContext';\nimport {TodoCounter} from '../TodoCounter';\nimport {TodoSearch} from '../TodoSearch';\nimport {TodoList} from '../TodoList';\nimport {TodoItem} from '../TodoItem';\nimport {CreateTodoButton} from '../CreateTodoButton';\nimport {Modal} from '../Modal';\nimport { TodoForm } from \"../TodoForm\";\n\nfunction AppUI() {\n\n    const {\n        error,\n        loading,\n        searchedTodos,\n        completeTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal\n    } = React.useContext(TodoContext);\n\n    return (\n        <React.Fragment>\n        \n            <TodoCounter />\n            \n            <TodoSearch />\n            \n            {/*<TodoContext.Consumer>\n                {({\n                    error, loading, searchedTodos, completeTodo, deleteTodo\n                }) => (*/}\n                    <TodoList>\n                        {error && <p>Desesperate, hubo un error</p>}\n                        {loading && <p>Estamos cargando, no desesperes</p>}\n                        {(!loading && !searchedTodos.length) && <p>Â¡Crea tu primer TODO!</p>}\n            \n            \n                        {searchedTodos.map(todo => (\n                            <TodoItem \n                                key={todo.text} \n                                text={todo.text}\n                                completed={todo.completed}\n                                onComplete={() => completeTodo(todo.text)}\n                                onDelete={() => deleteTodo(todo.text)} \n                            />\n                        ))}\n                    </TodoList>\n{/*                )}\n            </TodoContext.Consumer>*/}\n            \n            {!!openModal && (\n                <Modal>\n                    <TodoForm />\n                </Modal>\n            )}\n\n            <CreateTodoButton openModal={openModal} setOpenModal={setOpenModal} />\n        \n        </React.Fragment>\n    );\n}\n\nexport {AppUI};","//import logo from './logo.svg';\n//import './App.css';\nimport React from \"react\";\nimport { TodoProvider } from \"../TodoContext\";\nimport {AppUI} from './AppUI';\n\n/**const defaultTodos = [\n { text: 'Cortar cebolla', completed: true},\n { text: 'Tomar curso', completed: false},\n { text: 'Filtras datos', completed: false}\n];*/\n\nfunction App() {\n  \n  \n\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App saludo=\"HolaLeonardo\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\n/*ReactDOM.createPortal(\n  <App></App>,\n  document.getElementById('modal')\n);*/\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}